#!/usr/bin/env node

const { promisify } = require('util');
const { logSeparator, logSuccess } = require('./utils');
const writeFile = promisify(require('fs').writeFile);
const RSS = require('rss');

const BASE_URL = 'https://www.stefanjudis.com';
const BASE_FEED_TITLE = 'Stefan Judis Web Development';
const FEED_DEFAULTS = {
  title: `${BASE_FEED_TITLE}`,
  site_url: BASE_URL,
  managingEditor: 'stefanjudis@gmail.com',
  webMaster: 'stefanjudis@gmail.com',
  language: 'en'
};

const cdaContentful = require('contentful');
const { getConfig } = require('../lib/config.js');
const ctfConfig = getConfig();
const cdaClient = cdaContentful.createClient({
  accessToken: ctfConfig.CTF_CDA_TOKEN,
  host: 'cdn.contentful.com',
  space: ctfConfig.CTF_SPACE_ID
});

const sortByDate = (prev, cur) => new Date(cur.date) - new Date(prev.date);

const mapToRSSEntry = ({ fields, sys }) => {
  let { date, title, description, slug } = fields;
  const isTil = sys.contentType.sys.id === 'tilPost';

  return {
    date: date.substring(0, 10),
    description,
    title: isTil ? `TIL: ${title}` : title,
    url: `${BASE_URL}/${isTil ? 'today-i-learned' : 'blog'}/${slug}/`
  };
};

(async () => {
  try {
    logSeparator('Reading blog and til files');

    const blogPosts = (
      await cdaClient.getEntries({
        content_type: '2wKn6yEnZewu2SCCkus4as',
        order: '-fields.date',
        limit: 1000
      })
    ).items.map(mapToRSSEntry);

    await writeRssFeed({
      file: 'blog.xml',
      name: 'Blog Posts',
      items: blogPosts
    });

    const tilPosts = (
      await cdaClient.getEntries({
        content_type: 'tilPost',
        order: '-fields.date',
        limit: 1000
      })
    ).items.map(mapToRSSEntry);

    await writeRssFeed({
      file: 'til.xml',
      name: 'Today I learned Posts',
      items: tilPosts
    });

    logSuccess('blog.xml and til.xml RSS feed written');
    logSeparator('Combining RSS feeds');

    const allItems = [...blogPosts, ...tilPosts].sort(sortByDate);

    await writeRssFeed({
      file: 'rss.xml',
      items: allItems
    });

    logSuccess('rss.xml written');
  } catch (e) {
    console.error(e);
  }
})();

async function writeRssFeed(feed) {
  const rssFeed = new RSS(
    Object.assign(FEED_DEFAULTS, {
      title: feed.name ? `${BASE_FEED_TITLE} | ${feed.name}` : BASE_FEED_TITLE,
      feed_url: `${BASE_URL}/${feed.file}`
    })
  );

  feed.items.forEach(item => rssFeed.item(item));

  await writeFile(`./dist/${feed.file}`, rssFeed.xml());
}
