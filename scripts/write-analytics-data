#!/usr/bin/env node

require('dotenv').config();
const { google } = require('googleapis');
const scopes = 'https://www.googleapis.com/auth/analytics.readonly';
const { GOOGLE_CLIENT_EMAIL, GOOGLE_PRIVATE_KEY } = process.env;
const jwt = new google.auth.JWT(
  GOOGLE_CLIENT_EMAIL,
  null,
  // there's some character escaping going on
  // so we have to invert that
  GOOGLE_PRIVATE_KEY.replace(/\\n/g, '\n'),
  scopes
);

const { client } = require('../lib/contentful');
const { contentTypeSlugs } = require('../site/_data/config');
const { logSeparator, logSuccess, writeDataFile } = require('./utils');
const view_id = '157258229';

async function getData() {
  try {
    await jwt.authorize();

    logSeparator('Fetching Analytics data');

    const { data } = await google.analytics('v3').data.ga.get({
      auth: jwt,
      ids: 'ga:' + view_id,
      'start-date': '90daysAgo',
      'end-date': 'today',
      metrics: 'ga:uniquePageviews',
      dimensions: 'ga:pagePath',
      sort: '-ga:uniquePageviews',
      'max-results': '15',
    });

    logSuccess('Analytics data fetched');
    logSeparator('Enriching data with Contentful data');

    const pages = await Promise.all(
      data.rows
        .filter(([path]) =>
          // todo add notes/commands here too
          path.match(/^\/(blog|today-i-learned)\/.+?\/$/g)
        )
        .map(async ([path]) => {
          const getContentTypeId = (slug) => {
            return Object.entries(contentTypeSlugs).find(
              ([, contentTypeSlug]) => contentTypeSlug === slug
            )[0];
          };

          const [, contentTypeSlug, entrySlug] = path.split('/');
          const { items } = await client.getEntries({
            content_type: getContentTypeId(contentTypeSlug),
            'fields.slug': entrySlug,
          });

          return items[0];
        })
    );

    logSuccess('Data enriched');
    logSeparator('Writing JSON data file');

    writeDataFile('_popularPosts.json', JSON.stringify(pages.slice(0, 10)));

    logSuccess('JSON file written');
  } catch (error) {
    console.error(error);
  }
}

getData();
